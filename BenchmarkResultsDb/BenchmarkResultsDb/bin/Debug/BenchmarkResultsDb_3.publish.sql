/*
Deployment script for clperftesting_zlatan_test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "clperftesting_zlatan_test"
:setvar DefaultFilePrefix "clperftesting_zlatan_test"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
/*
The column [dbo].[benchmark_runs].[parallel_exec_cnt] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[benchmark_runs])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[scheduled_benchmarks].[parallel_exec_cnt] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[scheduled_benchmarks])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Removing schema binding from [dbo].[scheduled_benchmarks_view]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER VIEW [dbo].[scheduled_benchmarks_view]
AS
SELECT sb.id,
       sb.job_id,
       sb.benchmark_name,
       sb.environment,
       sb.hardware_generation,
       sb.processor_count,
       sb.parallel_exec_cnt,
       sb.is_bc,
       sb.is_picked_up,
       sb.is_adhoc_run,
       ISNULL(sar.benchmark_scaling_argument, sbc.benchmark_scaling_argument) AS benchmark_scaling_argument,
       sar.correlation_id,
       ISNULL(sar.custom_master_tsql_query, sbc.custom_master_tsql_query) AS custom_master_tsql_query,
       ISNULL(sar.region, sbc.region) AS region,
       ISNULL(sar.server_name, sbc.server_name) AS server_name,
       ISNULL(sar.[database_name], sbc.[database_name]) AS [database_name],
       sar.[priority],
       ISNULL(sar.required_processor_count, sbc.required_processor_count) AS required_processor_count,
       ISNULL(sar.scaled_down, sbc.scaled_down) AS scaled_down,
       ISNULL(sar.worker_number, sbc.worker_number) AS worker_number,
       sar.scheduled_by,
       sar.should_restore,
       ISNULL(sar.warmup_timespan_minutes, sbc.warmup_timespan_minutes) AS warmup_timespan_minutes,
       ISNULL(sar.run_timespan_minutes, sbc.run_timespan_minutes) AS run_timespan_minutes,
       ISNULL(sar.scheduled_by, sbc.email_address) AS mail_to
FROM   dbo.scheduled_benchmarks AS sb
       LEFT OUTER JOIN
       dbo.adhoc_run_configs AS sar
       ON sb.id = sar.id
       INNER JOIN
       dbo.slo_benchmark_config AS sbc
       ON sbc.benchmark_name = sb.benchmark_name
          AND sbc.environment = sb.environment
          AND sbc.processor_count = sb.processor_count
          AND sbc.hardware_generation = sb.hardware_generation
          AND sbc.is_bc = sb.is_bc;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[benchmark_runs]...';


GO
ALTER TABLE [dbo].[benchmark_runs] DROP COLUMN [parallel_exec_cnt];


GO
PRINT N'Altering [dbo].[scheduled_benchmarks]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER TABLE [dbo].[scheduled_benchmarks] DROP COLUMN [parallel_exec_cnt];


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Adding schema binding to [dbo].[scheduled_benchmarks_view]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
-- *********************************************************************
-- Copyright (c) Microsoft Corporation.
--
-- @File: scheduled_benchmarks_view.sql
--
-- @Owner: anjov
--
-- Purpose:
-- View over all types of scheduled benchmarks (regular and ad-hoc).
--
-- *********************************************************************
ALTER VIEW dbo.scheduled_benchmarks_view
WITH SCHEMABINDING
AS
    SELECT
        sb.id,
        sb.job_id,
        sb.benchmark_name,
        sb.environment,
        sb.hardware_generation,
        sb.processor_count,
        sb.is_bc,
        sb.is_picked_up,
        sb.is_adhoc_run,
        sar.parallel_exec_cnt,
        benchmark_scaling_argument = ISNULL(sar.benchmark_scaling_argument, sbc.benchmark_scaling_argument),
        sar.correlation_id,
        custom_master_tsql_query = ISNULL(sar.custom_master_tsql_query, sbc.custom_master_tsql_query),
        region = ISNULL(sar.region, sbc.region),
        server_name = ISNULL(sar.server_name, sbc.server_name),
        [database_name] = ISNULL(sar.[database_name], sbc.[database_name]),
        sar.[priority],
        required_processor_count = ISNULL(sar.required_processor_count, sbc.required_processor_count),
        scaled_down = ISNULL(sar.scaled_down, sbc.scaled_down),
        worker_number = ISNULL(sar.worker_number, sbc.worker_number),
        sar.scheduled_by,
        sar.should_restore,
        warmup_timespan_minutes = ISNULL(sar.warmup_timespan_minutes, sbc.warmup_timespan_minutes),
        run_timespan_minutes = ISNULL(sar.run_timespan_minutes, sbc.run_timespan_minutes),
        mail_to = ISNULL(sar.scheduled_by, sbc.email_address)
    FROM
        dbo.scheduled_benchmarks sb
            LEFT OUTER JOIN
        dbo.adhoc_run_configs sar
            ON sb.id = sar.id
            INNER JOIN
        dbo.slo_benchmark_config sbc
            ON sbc.benchmark_name = sb.benchmark_name
            AND sbc.environment = sb.environment
            AND sbc.processor_count = sb.processor_count
            AND sbc.hardware_generation = sb.hardware_generation
            AND sbc.is_bc = sb.is_bc
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[benchmark_runs_view]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[benchmark_runs_view]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[unsent_benchmark_results_view]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[unsent_benchmark_results_view]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[get_pending_benchmark_actions]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[get_pending_benchmark_actions]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[start_benchmark]...';


GO
-- *********************************************************************
-- Copyright (c) Microsoft Corporation.
--
-- @File: start_benchmark.sql
--
-- @Owner: v-milast
--
-- Purpose:
-- This stored procedure is used to initialize benchmark for runs.
-- It returns run_id
--
-- *********************************************************************
ALTER PROCEDURE [dbo].[start_benchmark]
	@benchmark_name VARCHAR(128),
	@processor_count INT,
	@hardware_generation VARCHAR(128),
	@environment VARCHAR(128) = NULL,
	@instance_dns_name VARCHAR(1000) = NULL,
	@comment NVARCHAR(MAX) = NULL,
	@correlation_id UNIQUEIDENTIFIER = NULL,
	@is_bussiness_critical BIT = 0
AS
BEGIN
	DECLARE @instance_id INT

	SELECT
		@instance_id = [instance_id]
	FROM
		[instance_state]
	WHERE
		[instance_name] = @instance_dns_name

	INSERT INTO [benchmark_runs]
	(
		[start_time],
		[benchmark_name],
		[instance_id],
		[processor_count],
		[hardware_generation],
		[environment],
		[comment],
		[correlation_id],
		[is_bc],
		[mail_sent]
	)
	OUTPUT [inserted].[run_id]
	VALUES
	(
		GETUTCDATE(),
		@benchmark_name,
		@instance_id,
		@processor_count,
		@hardware_generation,
		@environment,
		@comment,
		@correlation_id,
		@is_bussiness_critical,
		0
	)
END
GO
PRINT N'Altering [dbo].[start_scheduled_benchmark]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
-- *********************************************************************
-- Copyright (c) Microsoft Corporation.
--
-- @File: start_scheduled_benchmark.sql
--
-- @Owner: anjov
--
-- Purpose:
-- Starts a scheduled benchmark run, specified by its ID, on the given instance.
-- Also schedules any actions connected to the benchmark.
--
-- *********************************************************************
ALTER PROCEDURE [dbo].[start_scheduled_benchmark]
	@scheduled_benchmark_id INT,
	@instance_dns_name VARCHAR(1000),
	@comment NVARCHAR(MAX) = NULL,
	@correlation_id UNIQUEIDENTIFIER = NULL
AS
	DECLARE @benchmark_run_id INT
	DECLARE @instance_id INT

	SELECT
		@instance_id = [instance_id]
	FROM
		[instance_state]
	WHERE
		[instance_name] = @instance_dns_name

	INSERT INTO benchmark_runs
	(
		start_time,
		scheduled_benchmark_id,
		benchmark_name,
		instance_id,
		processor_count,
		hardware_generation,
		environment,
		comment,
		correlation_id,
		is_bc
	)
	SELECT
		GETUTCDATE(),
		id,
		benchmark_name,
		@instance_id,
		processor_count,
		hardware_generation,
		environment,
		@comment,
		@correlation_id,
		is_bc
	FROM
		scheduled_benchmarks
	WHERE
		id = @scheduled_benchmark_id

	SET @benchmark_run_id = SCOPE_IDENTITY()

	UPDATE benchmark_action_executions
	SET run_id = @benchmark_run_id
	WHERE action_id IN (
		SELECT action_id
		FROM scheduled_benchmark_actions
		WHERE scheduled_benchmark_id = @scheduled_benchmark_id)

	SELECT @benchmark_run_id AS [run_id]
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[schedule_adhoc_benchmark]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
-- *********************************************************************
-- Copyright (c) Microsoft Corporation.
--
-- @File: schedule_adhoc_benchmark.sql
--
-- @Owner: v-milast
--
-- Stored procedure used to schedule adhoc runs, with desired parameters set as override.
-- If some argument is not specified default value is taken for that SLO
--
-- *********************************************************************
ALTER PROCEDURE [dbo].[schedule_adhoc_benchmark]
    @action_name NVARCHAR(64),
    @processor_count INT,
    @hardware_generation NVARCHAR(64),
    @environment NVARCHAR(64),
    @is_bc BIT,
    @should_restore BIT = 1,
    @priority INT = 0,
    @worker_number INT = NULL,
    @benchmark_scaling_argument INT = NULL,
    @scaled_down BIT = NULL,
    @region VARCHAR(100) = NULL,
    @server_name NVARCHAR(1000) = NULL,
    @database_name NVARCHAR(128) = NULL,
    @warmup_timespan_minutes INT = NULL,
    @run_timespan_minutes INT = NULL,
    @custom_master_tsql_query NVARCHAR(MAX) = NULL,
    @required_processor_count INT = NULL,
    @parallel_exec_cnt INT = NULL, 
    @scheduled_by NVARCHAR(1024) = NULL,
    @comment NVARCHAR(MAX) = NULL,
    @scheduled_benchmark_id INT = NULL OUTPUT
AS
BEGIN
    SELECT
        @worker_number = COALESCE(@worker_number, [worker_number]),
        @benchmark_scaling_argument = COALESCE(@benchmark_scaling_argument, [benchmark_scaling_argument]),
        @scaled_down = COALESCE(@scaled_down, [scaled_down]),
        @region = COALESCE(@region, [region]),
        @server_name = COALESCE(@server_name, [server_name]),
        @database_name = COALESCE(@database_name, [database_name]),
        @warmup_timespan_minutes = COALESCE(@warmup_timespan_minutes, [warmup_timespan_minutes]),
        @run_timespan_minutes = COALESCE(@run_timespan_minutes, [run_timespan_minutes]),
        @custom_master_tsql_query = COALESCE(@custom_master_tsql_query, [custom_master_tsql_query]),
        @required_processor_count = COALESCE(@required_processor_count, [required_processor_count]),
        @parallel_exec_cnt  = COALESCE(@parallel_exec_cnt, [parallel_exec_cnt])
    FROM [slo_benchmark_config]
    WHERE [benchmark_name] = @action_name
    AND [environment] = @environment
    AND [processor_count] = @processor_count
    AND [hardware_generation] = @hardware_generation
    AND [is_bc] = @is_bc

    IF @scheduled_by IS NOT NULL
        SET @scheduled_by = CONCAT(@scheduled_by, '@microsoft.com')
    ELSE IF (CHARINDEX('@microsoft', SUSER_NAME()) > 0)
        SET @scheduled_by = SUSER_NAME()

    BEGIN TRANSACTION

        INSERT INTO [dbo].[scheduled_benchmarks]
            ([is_adhoc_run], [processor_count], [hardware_generation], [is_bc], [benchmark_name], [environment], [is_picked_up])
        VALUES
            (1, @processor_count, @hardware_generation, @is_bc, @action_name, @environment, 0)

        SET @scheduled_benchmark_id = SCOPE_IDENTITY()

        INSERT INTO [dbo].[adhoc_run_configs]
        (
            [id],
            [worker_number],
            [benchmark_scaling_argument],
            [scaled_down],
            [region],
            [server_name],
            [database_name],
            [warmup_timespan_minutes],
            [run_timespan_minutes],
            [custom_master_tsql_query],
            [required_processor_count],
            [parallel_exec_cnt],
            [priority],
            [should_restore],
            [correlation_id],
            [scheduled_by],
            [comment]
        ) VALUES
        (
            @scheduled_benchmark_id,
            @worker_number,
            @benchmark_scaling_argument,
            @scaled_down,
            @region,
            @server_name,
            @database_name,
            @warmup_timespan_minutes,
            @run_timespan_minutes,
            @custom_master_tsql_query,
            @required_processor_count,
            @parallel_exec_cnt,
            @priority,
            @should_restore,
            NEWID(),
            @scheduled_by,
            @comment
         )

     COMMIT TRANSACTION
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[schedule_adhoc_benchmark_override]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
-- ************************************************************************
-- Copyright (c) Microsoft Corporation.
--
-- @File: schedule_adhoc_benchmark_override.sql
--
-- @Owner: v-dukut
--
-- Purpose: Stored procedure used to schedule adhoc runs, with desired parameters set as override.
--			config overrides + instance, database and slo property bag overrides
--			If some argument is not specified default value is taken for that SLO
--			Behaves same as schedule_adhoc_benchmark procedure + job_id and config_override columns
--			(This isn't added in schedule_adhoc_benchmark procedure since only v-dukut uses it)
--
-- ************************************************************************

ALTER PROCEDURE [dbo].[schedule_adhoc_benchmark_override]
	@action_name NVARCHAR(64),
	@processor_count INT,
	@hardware_generation NVARCHAR(64),
	@environment NVARCHAR(64),
	@is_bc BIT,
	@should_restore BIT = 1,
	@priority INT = 0,
	@worker_number INT = NULL,
	@benchmark_scaling_argument INT = NULL,
	@scaled_down BIT = NULL,
	@region VARCHAR(100) = NULL,
	@server_name NVARCHAR(1000) = NULL,
	@database_name NVARCHAR(128) = NULL,
	@warmup_timespan_minutes INT = NULL,
	@run_timespan_minutes INT = NULL,
	@custom_master_tsql_query NVARCHAR(MAX) = NULL,
	@required_processor_count INT = NULL,
	@parallel_exec_cnt INT = NULL,
	@scheduled_by NVARCHAR(1024) = NULL,
	@comment NVARCHAR(MAX) = NULL,

	@job_id INT = NULL,

	@config_names NVARCHAR(MAX) NULL,
	@config_values NVARCHAR(MAX) NULL,
	@instance_settings_overrides NVARCHAR(MAX) NULL,
	@database_settings_overrides NVARCHAR(MAX) NULL,
	@slo_property_bag_overrides NVARCHAR(MAX) NULL,
	@trace_flags NVARCHAR(MAX) NULL,

	@scheduled_benchmark_id INT = NULL OUTPUT
AS
BEGIN
		-- Python library for connecting to database doesn't works properly if
		-- anything is displayed in the message
		SET NOCOUNT ON;  

		SELECT
		@worker_number = COALESCE(@worker_number, [worker_number]),
		@benchmark_scaling_argument = COALESCE(@benchmark_scaling_argument, [benchmark_scaling_argument]),
		@scaled_down = COALESCE(@scaled_down, [scaled_down]),
		@region = COALESCE(@region, [region]),
		@server_name = COALESCE(@server_name, [server_name]),
		@database_name = COALESCE(@database_name, [database_name]),
		@warmup_timespan_minutes = COALESCE(@warmup_timespan_minutes, [warmup_timespan_minutes]),
		@run_timespan_minutes = COALESCE(@run_timespan_minutes, [run_timespan_minutes]),
		@custom_master_tsql_query = COALESCE(@custom_master_tsql_query, [custom_master_tsql_query]),
		@required_processor_count = COALESCE(@required_processor_count, [required_processor_count]),
		@parallel_exec_cnt = COALESCE(@parallel_exec_cnt, [parallel_exec_cnt])
		FROM [slo_benchmark_config]
		WHERE [benchmark_name] = @action_name
		AND [environment] = @environment
		AND [processor_count] = @processor_count
		AND [hardware_generation] = @hardware_generation
		AND [is_bc] = @is_bc

		IF @scheduled_by IS NOT NULL
		SET @scheduled_by = CONCAT(@scheduled_by, '@microsoft.com')
		ELSE IF (CHARINDEX('@microsoft', SUSER_NAME()) > 0)
		SET @scheduled_by = SUSER_NAME()

		BEGIN TRANSACTION

		INSERT INTO [dbo].[scheduled_benchmarks]
			([is_adhoc_run], [processor_count], [hardware_generation], [is_bc], [benchmark_name], [environment], [is_picked_up], [job_id])
		VALUES
			(1, @processor_count, @hardware_generation, @is_bc, @action_name, @environment, 0, @job_id)

		SET @scheduled_benchmark_id = SCOPE_IDENTITY()

		INSERT INTO [dbo].[adhoc_run_configs]
		(
			[id],
			[worker_number],
			[benchmark_scaling_argument],
			[scaled_down],
			[region],
			[server_name],
			[database_name],
			[warmup_timespan_minutes],
			[run_timespan_minutes],
			[custom_master_tsql_query],
			[required_processor_count],
			[parallel_exec_cnt],
			[priority],
			[should_restore],
			[correlation_id],
			[scheduled_by],
			[comment]
		) VALUES
		(
			@scheduled_benchmark_id,
			@worker_number,
			@benchmark_scaling_argument,
			@scaled_down,
			@region,
			@server_name,
			@database_name,
			@warmup_timespan_minutes,
			@run_timespan_minutes,
			@custom_master_tsql_query,
			@required_processor_count,
			@parallel_exec_cnt,
			@priority,
			@should_restore,
			NEWID(),
			@scheduled_by,
			@comment
			)

		INSERT INTO [dbo].[config_override]
		(
		[id],
		[config_override],
		[config_names],
		[config_values],
		[instance_settings_overrides],
		[database_settings_overrides],
		[slo_property_bag_overrides],
		[trace_flags]

		) VALUES
		(
		@scheduled_benchmark_id,
		(SELECT @config_names AS ConfigNames, @config_values AS ConfigValues FOR JSON PATH),
		@config_names,
		@config_values,
		@instance_settings_overrides,
		@database_settings_overrides,
		@slo_property_bag_overrides,
		@trace_flags
		)

		DECLARE @config_action_parameters_json NVARCHAR(MAX),
				@property_action_parameters_json NVARCHAR(MAX)

		--action SetConfigOverride 
		SET @config_action_parameters_json = (SELECT config_names, config_values
											FROM config_override
											WHERE id = @scheduled_benchmark_id FOR JSON AUTO)

		EXEC add_action_to_scheduled_benchmark
			@scheduled_benchmark_id = @scheduled_benchmark_id,
			@action_type = 'SetConfigOverride',
			@required_benchmark_state = 'Setup',
			@offset_seconds = 0,
			@action_parameters_json = @config_action_parameters_json

		--action SetPropertyOverride	
		SET @property_action_parameters_json = (SELECT instance_settings_overrides, database_settings_overrides, slo_property_bag_overrides
										FROM config_override
										WHERE id = @scheduled_benchmark_id FOR JSON AUTO) 

		EXEC add_action_to_scheduled_benchmark
			@scheduled_benchmark_id = @scheduled_benchmark_id,
			@action_type = 'SetPropertyOverride',
			@required_benchmark_state = 'ConfigOverridesApplied',
			@offset_seconds = 0,
			@action_parameters_json = @property_action_parameters_json


		COMMIT TRANSACTION
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[end_benchmark]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[end_benchmark]';


GO
PRINT N'Refreshing [dbo].[mark_mail_sent]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[mark_mail_sent]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[test_cleanup]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[test_cleanup]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[test_benchmark_actions]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[test_benchmark_actions]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[get_next_action]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[get_next_action]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[exec_and_verify_get_next_action]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[exec_and_verify_get_next_action]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[schedule_job]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[schedule_job]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[test_get_next_action]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[test_get_next_action]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[run_tests]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[run_tests]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
/*
Post-Deployment Script Template
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.
 Use SQLCMD syntax to include a file in the post-deployment script.
 Example:      :r .\myfile.sql
 Use SQLCMD syntax to reference a variable in the post-deployment script.
 Example:      :setvar TableName MyTable
               SELECT * FROM [$(TableName)]
--------------------------------------------------------------------------------------
*/


-- We can only set one file to be post deploy script
-- so we call other scripts here
--

-- Insert data to slo benchmark config
SET XACT_ABORT ON

BEGIN TRANSACTION INIT_SLO_BENCH

DECLARE @slo_benchmark_config_tmp TABLE
(
    [processor_count] INT NOT NULL,
    [parallel_exec_cnt] INT NOT NULL,
    [hardware_generation] NVARCHAR(128) NOT NULL,
    [is_bc] BIT NOT NULL,
    [benchmark_name] NVARCHAR(128) NOT NULL,
    [worker_number] INT NOT NULL,
    [benchmark_scaling_argument] INT NOT NULL,
    [scaled_down] BIT NOT NULL,
    [server_name] NVARCHAR(1000) NOT NULL,
    [database_name] NVARCHAR(128) NOT NULL,
    [warmup_timespan_minutes] INT NOT NULL,
    [run_timespan_minutes] INT NOT NULL,
    [custom_master_tsql_query] NVARCHAR(MAX) NULL,
    [required_processor_count] INT NOT NULL,
    [environment] NVARCHAR(50) NOT NULL
)

INSERT INTO @slo_benchmark_config_tmp
(
        [processor_count],
        [parallel_exec_cnt],
        [hardware_generation],
        [is_bc],
        [benchmark_name],
        [worker_number],
        [benchmark_scaling_argument],
        [scaled_down],
        [server_name],
        [database_name],
        [warmup_timespan_minutes],
        [run_timespan_minutes],
        [environment],
        [custom_master_tsql_query],
        [required_processor_count]
)
VALUES
        -- GEN 4 PROD
        (8, 1, 'GEN4', 0, 'CDB', 1120, 15000, 0, 'clperftestin02.wcus10d832431fca2.database.windows.net', 'cdb15000', 15, 60, 'ProdG4', NULL, 2),
        (16, 1, 'GEN4', 0, 'CDB', 1600, 15000, 0, 'clperftesting01.wcus10d832431fca2.database.windows.net', 'cdb15000', 15, 60, 'ProdG4', NULL, 3),
        (24, 1, 'GEN4', 0, 'CDB', 1600, 30000, 0, 'clperftesting03.wcus10d832431fca2.database.windows.net', 'cdb30000', 15, 60, 'ProdG4', NULL, 4),
        (8, 1, 'GEN4', 1, 'CDB', 1120, 15000, 0, 'clperftesting-gen4-bc8-wcus-01.wcus10d832431fca2.database.windows.net', 'cdb15000', 15, 60, 'ProdG4', NULL, 2),
        (16, 1, 'GEN4', 1, 'CDB', 2240, 15000, 0, 'clperftesting-gen4-bc16-wcus-01.wcus10d832431fca2.database.windows.net', 'cdb15000', 15, 60, 'ProdG4', NULL, 3),
        (24, 1, 'GEN4', 1, 'CDB', 3360, 30000, 0, 'clperftesting-gen4-bc24-wcus-01.wcus10d832431fca2.database.windows.net', 'cdb30000', 15, 60, 'ProdG4', NULL, 4),
        (8, 1, 'GEN4', 0, 'TPCC', 100, 4000, 0, 'clperftestin02.wcus10d832431fca2.database.windows.net', 'tpcc4000', 15, 120, 'ProdG4', NULL, 2),
        (16, 1, 'GEN4', 0, 'TPCC', 200, 4000, 0, 'clperftesting01.wcus10d832431fca2.database.windows.net', 'tpcc4000', 15, 120, 'ProdG4', NULL, 3),
        (24, 1, 'GEN4', 0, 'TPCC', 300, 4000, 0, 'clperftesting03.wcus10d832431fca2.database.windows.net', 'tpcc4000', 15, 120, 'ProdG4', NULL, 4),
        (8, 1, 'GEN4', 1, 'TPCC', 100, 4000, 0, 'clperftesting-gen4-bc8-wcus-01.wcus10d832431fca2.database.windows.net', 'tpcc4000', 15, 120, 'ProdG4', NULL, 2),
        (16, 1, 'GEN4', 1, 'TPCC', 200, 4000, 0, 'clperftesting-gen4-bc16-wcus-01.wcus10d832431fca2.database.windows.net', 'tpcc4000', 15, 120, 'ProdG4', NULL, 3),
        (24, 1, 'GEN4', 1, 'TPCC', 300, 4000, 0, 'clperftesting-gen4-bc24-wcus-01.wcus10d832431fca2.database.windows.net', 'tpcc4000', 15, 120, 'ProdG4', NULL, 4),
        -- GEN 5 PROD
        (8, 1, 'GEN5', 0, 'CDB', 720, 15000, 0, 'clperftesting-gen5-gp8-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 60, 'ProdG5', NULL, 2),
        (16, 1, 'GEN5', 0, 'CDB', 1440, 15000, 0, 'clperftesting-gen5-gp16-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 60, 'ProdG5', NULL, 3),
        (24, 1, 'GEN5', 0, 'CDB', 1600, 15000, 0, 'clperftesting-gen5-gp24-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 60, 'ProdG5', NULL, 4),
        (32, 1, 'GEN5', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen5-gp32-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 60, 'ProdG5', NULL, 5),
        (40, 1, 'GEN5', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen5-gp40-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 30, 60, 'ProdG5', NULL, 6),
        (64, 1, 'GEN5', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen5-gp64-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 30, 60, 'ProdG5', NULL, 7),
        (80, 1, 'GEN5', 0, 'CDB', 1600, 40000, 0, 'clperftesting-gen5-gp80-weu-01.weu14c689be44714.database.windows.net', 'cdb40000', 30, 60, 'ProdG5', NULL, 8),
        (8, 1, 'GEN5', 1, 'CDB', 720, 15000, 0, 'clperftesting-gen5-bc8-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 60, 'ProdG5', NULL, 2),
        (16, 1, 'GEN5', 1, 'CDB', 1440, 15000, 0, 'clperftesting-gen5-bc16-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 60, 'ProdG5', NULL, 3),
        (24, 1, 'GEN5', 1, 'CDB', 2160, 30000, 0, 'clperftesting-gen5-bc24-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 60, 'ProdG5', NULL, 4),
        (32, 1, 'GEN5', 1, 'CDB', 2880, 30000, 0, 'clperftesting-gen5-bc32-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 60, 'ProdG5', NULL, 5),
        (40, 1, 'GEN5', 1, 'CDB', 3600, 30000, 0, 'clperftesting-gen5-bc40-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 30, 60, 'ProdG5', NULL, 6),
        (64, 1, 'GEN5', 1, 'CDB', 5765, 30000, 0, 'clperftesting-gen5-bc64-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 30, 60, 'ProdG5', NULL, 7),
        (80, 1, 'GEN5', 1, 'CDB', 7200, 40000, 0, 'clperftesting-gen5-bc80-weu-01.weu14c689be44714.database.windows.net', 'cdb40000', 30, 60, 'ProdG5', NULL, 8),
        (8, 1, 'GEN5', 0, 'TPCC', 100, 4000, 0, 'clperftesting-gen5-gp8-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 2),
        (16, 1, 'GEN5', 0, 'TPCC', 200, 4000, 0, 'clperftesting-gen5-gp16-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 3),
        (24, 1, 'GEN5', 0, 'TPCC', 300, 4000, 0, 'clperftesting-gen5-gp24-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 4),
        (32, 1, 'GEN5', 0, 'TPCC', 400, 4000, 0, 'clperftesting-gen5-gp32-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 5),
        (40, 1, 'GEN5', 0, 'TPCC', 500, 4000, 0, 'clperftesting-gen5-gp40-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 30, 120, 'ProdG5', NULL, 6),
        (64, 1, 'GEN5', 0, 'TPCC', 800, 4000, 0, 'clperftesting-gen5-gp64-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 30, 120, 'ProdG5', NULL, 7),
        (80, 1, 'GEN5', 0, 'TPCC', 1000, 4000, 0, 'clperftesting-gen5-gp80-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 30, 120, 'ProdG5', NULL, 8),
        (8, 1, 'GEN5', 1, 'TPCC', 100, 4000, 0, 'clperftesting-gen5-bc8-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 2),
        (16, 1, 'GEN5', 1, 'TPCC', 200, 4000, 0, 'clperftesting-gen5-bc16-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 3),
        (24, 1, 'GEN5', 1, 'TPCC', 300, 4000, 0, 'clperftesting-gen5-bc24-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 4),
        (32, 1, 'GEN5', 1, 'TPCC', 400, 4000, 0, 'clperftesting-gen5-bc32-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 15, 120, 'ProdG5', NULL, 5),
        (40, 1, 'GEN5', 1, 'TPCC', 500, 4000, 0, 'clperftesting-gen5-bc40-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 30, 120, 'ProdG5', NULL, 6),
        (64, 1, 'GEN5', 1, 'TPCC', 800, 4000, 0, 'clperftesting-gen5-bc64-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 30, 120, 'ProdG5', NULL, 7),
        (80, 1, 'GEN5', 1, 'TPCC', 1000, 4000, 0, 'clperftesting-gen5-bc80-weu-01.weu14c689be44714.database.windows.net', 'tpcc4000', 30, 120, 'ProdG5', NULL, 8),
        (8, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp8-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 99999, 'ProdG5', NULL, 4),
        (16, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp16-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 99999, 'ProdG5', NULL, 4),
        (24, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp24-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 99999, 'ProdG5', NULL, 4),
        (32, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp32-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 99999, 'ProdG5', NULL, 4),
        (40, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp40-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 30, 99999, 'ProdG5', NULL, 4),
        (64, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp64-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 30, 99999, 'ProdG5', NULL, 4),
        (80, 1, 'GEN5', 0, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-gp80-weu-01.weu14c689be44714.database.windows.net', 'cdb40000', 30, 99999, 'ProdG5', NULL, 4),
        (8, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc8-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 99999, 'ProdG5', NULL, 4),
        (16, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc16-weu-01.weu14c689be44714.database.windows.net', 'cdb15000', 15, 99999, 'ProdG5', NULL, 4),
        (24, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc24-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 99999, 'ProdG5', NULL, 4),
        (32, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc32-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 99999, 'ProdG5', NULL, 4),
        (40, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc40-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 99999, 'ProdG5', NULL, 4),
        (64, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc64-weu-01.weu14c689be44714.database.windows.net', 'cdb30000', 15, 99999, 'ProdG5', NULL, 4),
        (80, 1, 'GEN5', 1, 'DataLoading', 1, 1024, 0, 'clperftesting-gen5-bc80-weu-01.weu14c689be44714.database.windows.net', 'cdb40000', 15, 99999, 'ProdG5', NULL, 4),
        -- GEN 4 STAGE
        (8, 1, 'GEN4', 0, 'CDB', 1120, 15000, 0, 'clperftesting-gen4-gp8-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'Stage', NULL, 2),
        (16, 1, 'GEN4', 0, 'CDB', 1600, 15000, 0, 'clperftesting-gen4-gp16-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'Stage', NULL, 3),
        (24, 1, 'GEN4', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen4-gp24-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'cdb30000', 15, 60, 'Stage', NULL, 3),
        (8, 1, 'GEN4', 1, 'CDB', 1120, 15000, 0, 'clperftesting-gen4-bc8-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'Stage', NULL, 2),
        (16, 1, 'GEN4', 1, 'CDB', 2240, 15000, 0, 'clperftesting-gen4-bc16-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'Stage', NULL, 3),
        (24, 1, 'GEN4', 1, 'CDB', 3360, 30000, 0, 'clperftesting-gen4-bc24-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'cdb30000', 15, 60, 'Stage', NULL, 4),
        (8, 1, 'GEN4', 0, 'TPCC', 100, 4000, 0, 'clperftesting-gen4-gp8-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'Stage', NULL, 2),
        (16, 1, 'GEN4', 0, 'TPCC', 200, 4000, 0, 'clperftesting-gen4-gp16-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'Stage', NULL, 3),
        (24, 1, 'GEN4', 0, 'TPCC', 300, 4000, 0, 'clperftesting-gen4-gp24-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'Stage', NULL, 4),
        (8, 1, 'GEN4', 1, 'TPCC', 100, 4000, 0, 'clperftesting-gen4-bc8-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'Stage', NULL, 2),
        (16, 1, 'GEN4', 1, 'TPCC', 200, 4000, 0, 'clperftesting-gen4-bc16-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'Stage', NULL, 3),
        (24, 1, 'GEN4', 1, 'TPCC', 300, 4000, 0, 'clperftesting-gen4-bc24-sneu-01.neu1396d5828d931.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'Stage', NULL, 4),
        -- SVM Stage
        -- Loose
        (4, 1, 'SVMLoose', 1, 'CDB', 360, 15000, 0, 'clperftesting-gen5-bc4-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 1),
        (4, 1, 'SVMLoose', 1, 'CDB', 360, 15000, 0, 'clperftesting-gen5-gp4-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMProd', NULL, 1),
        (8, 1, 'SVMLoose', 1, 'CDB', 720, 15000, 0, 'clperftesting-gen5-bc8-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 2),
        (24, 1, 'SVMLoose', 1, 'CDB', 2160, 30000, 0, 'clperftesting-gen5-bc24-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 15, 60, 'SVMStage', NULL, 4),
        (40, 1, 'SVMLoose', 1, 'CDB', 3600, 30000, 0, 'clperftesting-gen5-bc40-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 30, 60, 'SVMStage', NULL, 24),
        (4, 1, 'SVMLoose', 1, 'TPCC', 50, 4000, 0, 'clperftesting-gen5-bc4-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 1),
        (8, 1, 'SVMLoose', 1, 'TPCC', 100, 4000, 0, 'clperftesting-gen5-bc8-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 2),
        (24, 1, 'SVMLoose', 1, 'TPCC', 300, 4000, 0, 'clperftesting-gen5-bc24-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 4),
        (40, 1, 'SVMLoose', 1, 'TPCC', 500, 4000, 0, 'clperftesting-gen5-bc40-loose-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 30, 120, 'SVMStage', NULL, 24),
        -- Tight
        (4, 1, 'SVMTight', 0, 'CDB', 360, 15000, 0, 'clperftesting-gen5-gp4-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 1),
        (8, 1, 'SVMTight', 0, 'CDB', 720, 15000, 0, 'clperftesting-gen5-gp8-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 2),
        (16, 1, 'SVMTight', 0, 'CDB', 1440, 15000, 0, 'clperftesting-gen5-gp16-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 3),
        (24, 1, 'SVMTight', 0, 'CDB', 1600, 15000, 0, 'clperftesting-gen5-gp24-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 15, 60, 'SVMStage', NULL, 4),
        (32, 1, 'SVMTight', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen5-gp32-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 15, 60, 'SVMStage', NULL, 5),
        (40, 1, 'SVMTight', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen5-gp40-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 30, 60, 'SVMStage', NULL, 6),
        (64, 1, 'SVMTight', 0, 'CDB', 1600, 30000, 0, 'clperftesting-gen5-gp64-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 30, 60, 'SVMStage', NULL, 7),
        (80, 1, 'SVMTight', 0, 'CDB', 1600, 40000, 0, 'clperftesting-gen5-gp80-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb40000', 30, 60, 'SVMStage', NULL, 8),
        (4, 1, 'SVMTight', 1, 'CDB', 360, 15000, 0, 'clperftesting-gen5-bc4-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 1),
        (8, 1, 'SVMTight', 1, 'CDB', 720, 15000, 0, 'clperftesting-gen5-bc8-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb15000', 15, 60, 'SVMStage', NULL, 2),
        (24, 1, 'SVMTight', 1, 'CDB', 2160, 30000, 0, 'clperftesting-gen5-bc24-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 15, 60, 'SVMStage', NULL, 4),
        (40, 1, 'SVMTight', 1, 'CDB', 3600, 30000, 0, 'clperftesting-gen5-bc40-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'cdb30000', 30, 60, 'SVMStage', NULL, 24),
        (4, 1, 'SVMTight', 0, 'TPCC', 50, 4000, 0, 'clperftesting-gen5-gp4-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 1),
        (8, 1, 'SVMTight', 0, 'TPCC', 100, 4000, 0, 'clperftesting-gen5-gp8-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 2),
        (16, 1, 'SVMTight', 0, 'TPCC', 200, 4000, 0, 'clperftesting-gen5-gp16-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 3),
        (24, 1, 'SVMTight', 0, 'TPCC', 300, 4000, 0, 'clperftesting-gen5-gp24-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 4),
        (32, 1, 'SVMTight', 0, 'TPCC', 400, 4000, 0, 'clperftesting-gen5-gp32-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 5),
        (40, 1, 'SVMTight', 0, 'TPCC', 500, 4000, 0, 'clperftesting-gen5-gp40-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 30, 120, 'SVMStage', NULL, 6),
        (64, 1, 'SVMTight', 0, 'TPCC', 800, 4000, 0, 'clperftesting-gen5-gp64-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 30, 120, 'SVMStage', NULL, 7),
        (4, 1, 'SVMTight', 1, 'TPCC', 50, 4000, 0, 'clperftesting-gen5-bc4-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 1),
        (8, 1, 'SVMTight', 1, 'TPCC', 100, 4000, 0, 'clperftesting-gen5-bc8-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 2),
        (24, 1, 'SVMTight', 1, 'TPCC', 300, 4000, 0, 'clperftesting-gen5-bc24-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 15, 120, 'SVMStage', NULL, 4),
        (40, 1, 'SVMTight', 1, 'TPCC', 500, 4000, 0, 'clperftesting-gen5-bc40-tight-neu-00.neu187d1a144a72d.sqltest-eg1.mscds.com', 'tpcc4000', 30, 120, 'SVMStage', NULL, 24)

MERGE [slo_benchmark_config] AS target
USING @slo_benchmark_config_tmp AS source
ON (target.[processor_count] = source.[processor_count]
    AND target.[parallel_exec_cnt] = source.[parallel_exec_cnt]
    AND target.[hardware_generation] = source.[hardware_generation]
    AND target.[is_bc] = source.[is_bc]
    AND target.[benchmark_name] = source.[benchmark_name]
    AND target.[environment] = source.[environment])
        WHEN MATCHED THEN
        UPDATE SET
                [worker_number] = [source].[worker_number],
                [benchmark_scaling_argument] = [source].[benchmark_scaling_argument],
                [scaled_down] = [source].[scaled_down],
                [server_name] = [source].[server_name],
                [database_name] = [source].[database_name],
                [warmup_timespan_minutes] = [source].[warmup_timespan_minutes],
                [run_timespan_minutes] = [source].[run_timespan_minutes],
                [custom_master_tsql_query] = [source].[custom_master_tsql_query],
                [required_processor_count] = [source].[required_processor_count]
        WHEN NOT MATCHED THEN
        INSERT
        (
                [processor_count],
                [parallel_exec_cnt],
                [hardware_generation],
                [is_bc],
                [benchmark_name],
                [worker_number],
                [benchmark_scaling_argument],
                [scaled_down],
                [server_name],
                [database_name],
                [warmup_timespan_minutes],
                [run_timespan_minutes],
                [custom_master_tsql_query],
                [required_processor_count],
                [environment]
        ) VALUES
        (
                [source].[processor_count],
                [source].[parallel_exec_cnt],
                [source].[hardware_generation],
                [source].[is_bc],
                [source].[benchmark_name],
                [source].[worker_number],
                [source].[benchmark_scaling_argument],
                [source].[scaled_down],
                [source].[server_name],
                [source].[database_name],
                [source].[warmup_timespan_minutes],
                [source].[run_timespan_minutes],
                [source].[custom_master_tsql_query],
                [source].[required_processor_count],
                [source].[environment]
        );
COMMIT TRANSACTION INIT_SLO_BENCH


-- Insert data for scheduled benchmarks
SET XACT_ABORT ON

BEGIN TRANSACTION INIT_SLO_BENCH

DECLARE @scheduled_benchmarks_tmp TABLE
(
    [processor_count] INT NOT NULL,
    [parallel_exec_cnt] INT NOT NULL,
    [hardware_generation] NVARCHAR(128) NOT NULL,
    [is_bc] BIT NOT NULL,
    [benchmark_name] NVARCHAR(128) NOT NULL,
    [environment]  NVARCHAR(50) NOT NULL,
    [is_picked_up] BIT NOT NULL
)

INSERT INTO @scheduled_benchmarks_tmp
(
    [processor_count],
    [parallel_exec_cnt],
    [hardware_generation],
    [is_bc],
    [benchmark_name],
    [environment],
    [is_picked_up]
)
VALUES
        (8, 1, 'Gen4', 1 , 'CDB', 'ProdG4', 0),
        (16, 1, 'Gen4', 1 , 'CDB', 'ProdG4', 0),
        (24, 1, 'Gen4', 1 , 'CDB', 'ProdG4', 0),
        (8, 1, 'Gen4', 0 , 'CDB', 'ProdG4', 0),
        (16, 1, 'Gen4', 0 , 'CDB', 'ProdG4', 0),
        (24, 1, 'Gen4', 0 , 'CDB', 'ProdG4', 0),
        (8, 1, 'Gen4', 1 , 'TPCC', 'ProdG4', 0),
        (16, 1, 'Gen4', 1 , 'TPCC', 'ProdG4', 0),
        (24, 1, 'Gen4', 1 , 'TPCC', 'ProdG4', 0),
        (8, 1, 'Gen4', 0 , 'TPCC', 'ProdG4', 0),
        (16, 1, 'Gen4', 0 , 'TPCC', 'ProdG4', 0),
        (24, 1, 'Gen4', 0 , 'TPCC', 'ProdG4', 0),
        (8, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (16, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (24, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (32, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (40, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (64, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (80, 1, 'Gen5', 1 , 'CDB', 'ProdG5', 0),
        (8, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (16, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (24, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (32, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (40, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (64, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (80, 1, 'Gen5', 0 , 'CDB', 'ProdG5', 0),
        (8, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (16, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (24, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (32, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (40, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (64, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (80, 1, 'Gen5', 1 , 'TPCC', 'ProdG5', 0),
        (8, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (16, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (24, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (32, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (40, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (64, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (80, 1, 'Gen5', 0 , 'TPCC', 'ProdG5', 0),
        (8, 1, 'Gen4', 1 , 'CDB', 'Stage', 0),
        (16, 1, 'Gen4', 1 , 'CDB', 'Stage', 0),
        (24, 1, 'Gen4', 1 , 'CDB', 'Stage', 0),
        (8, 1, 'Gen4', 0 , 'CDB', 'Stage', 0),
        (16, 1, 'Gen4', 0 , 'CDB', 'Stage', 0),
        (24, 1, 'Gen4', 0 , 'CDB', 'Stage', 0),
        (8, 1, 'Gen4', 1 , 'TPCC', 'Stage', 0),
        (16, 1, 'Gen4', 1 , 'TPCC', 'Stage', 0),
        (24, 1, 'Gen4', 1 , 'TPCC', 'Stage', 0),
        (8, 1, 'Gen4', 0 , 'TPCC', 'Stage', 0),
        (16, 1, 'Gen4', 0 , 'TPCC', 'Stage', 0),
        (24, 1, 'Gen4', 0 , 'TPCC', 'Stage', 0),
        (4, 1, 'SVMLoose', 1 , 'CDB', 'SVMStage', 0),
        (8, 1, 'SVMLoose', 1 , 'CDB', 'SVMStage', 0),
        (24, 1, 'SVMLoose', 1 , 'CDB', 'SVMStage', 0),
        (40, 1, 'SVMLoose', 1 , 'CDB', 'SVMStage', 0),
        (4, 1, 'SVMLoose', 1 , 'TPCC', 'SVMStage', 0),
        (8, 1, 'SVMLoose', 1 , 'TPCC', 'SVMStage', 0),
        (24, 1, 'SVMLoose', 1 , 'TPCC', 'SVMStage', 0),
        (40, 1, 'SVMLoose', 1 , 'TPCC', 'SVMStage', 0),
        (4, 1, 'SVMTight', 1 , 'CDB', 'SVMStage', 0),
        (8, 1, 'SVMTight', 1 , 'CDB', 'SVMStage', 0),
        (24, 1, 'SVMTight', 1 , 'CDB', 'SVMStage', 0),
        (40, 1, 'SVMTight', 1 , 'CDB', 'SVMStage', 0),
        (4, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (8, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (16, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (24, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (32, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (40, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (64, 1, 'SVMTight', 0 , 'CDB', 'SVMStage', 0),
        (4, 1, 'SVMTight', 1 , 'TPCC', 'SVMStage', 0),
        (8, 1, 'SVMTight', 1 , 'TPCC', 'SVMStage', 0),
        (24, 1, 'SVMTight', 1 , 'TPCC', 'SVMStage', 0),
        (40, 1, 'SVMTight', 1 , 'TPCC', 'SVMStage', 0),
        (4, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0),
        (8, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0),
        (16, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0),
        (24, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0),
        (32, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0),
        (40, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0),
        (64, 1, 'SVMTight', 0 , 'TPCC', 'SVMStage', 0)

MERGE [scheduled_benchmarks] AS [target]
USING @scheduled_benchmarks_tmp AS source
ON (target.[processor_count] = source.[processor_count]
    AND target.[parallel_exec_cnt] = source.[parallel_exec_cnt]
    AND target.[hardware_generation] = source.[hardware_generation]
    AND target.[is_bc] = source.[is_bc]
    AND target.[benchmark_name] = source.[benchmark_name]
    AND target.[environment] = source.[environment])
WHEN NOT MATCHED THEN
        INSERT
        (
                [processor_count],
                [parallel_exec_cnt],
                [hardware_generation],
                [is_bc],
                [benchmark_name],
                [environment],
                [is_picked_up],
                [is_adhoc_run]
        ) VALUES
        (
                [source].[processor_count],
                [source].[parallel_exec_cnt],
                [source].[hardware_generation],
                [source].[is_bc],
                [source].[benchmark_name],
                [source].[environment],
                [source].[is_picked_up],
                0
        );
COMMIT TRANSACTION INIT_SLO_BENCH

GO

GO
PRINT N'Update complete.';


GO
